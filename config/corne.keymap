/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <125>; // 200 default
};

&lt {
    tapping-term-ms = <125>; // 200 default
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E             &kp R         &kp T          &kp Y        &kp U  &kp I          &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D             &kp F         &kp G          &kp H        &kp J  &kp K          &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C             &kp V         &kp B          &kp N        &kp M  &kp COMMA      &kp DOT  &kp FSLH  &mt RIGHT_SHIFT ENTER
                         &kp LEFT_CONTROL  &kp LEFT_ALT  &lt 1 SPACE    &lt 2 SPACE  &mo 3  &kp RIGHT_GUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Func";
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10          &kp F11
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &kp PRINTSCREEN  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &kp INSERT       &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Num";
            bindings = <
&kp GRAVE  &kp N1    &kp N2  &kp N3    &kp N4    &kp N5       &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &kp BSPC
&kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp MINUS
&trans     &trans    &trans  &trans    &trans    &trans       &trans     &trans    &trans    &trans    &trans    &trans
                             &trans    &trans    &trans       &trans     &trans    &trans
            >;
        };

        layer_3 {
            display-name = "Arrow";
            bindings = <
&studio_unlock  &trans        &trans        &trans        &trans        &trans          &trans         &kp LEFT_BRACKET  &kp UP_ARROW    &kp RIGHT_BRACKET  &trans  &trans
&out OUT_TOG    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp BACKSLASH  &kp LEFT_ARROW    &kp DOWN_ARROW  &kp RIGHT_ARROW    &trans  &kp EQUAL
&trans          &trans        &trans        &trans        &trans        &trans          &trans         &kp HOME          &trans          &kp END            &trans  &trans
                                            &trans        &trans        &trans          &trans         &trans            &trans
            >;
        };
    };
};
